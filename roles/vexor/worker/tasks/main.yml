- name: create docker group
  group: name=docker system=yes

- name: create user
  user: >
    name={{ vx_user }} comment="Vexor Worker" groups=docker
    createhome=false system=true home={{ vx_home }}/worker

- name: create etc dir
  file: dest={{ vx_etc_path }} state=directory owner={{ vx_user }} mode=0750

- name: install required packages
  apt: pkg={{ item }}
  with_items:
    - "vx-embeded-ruby-2.0"
    - "vx-embeded-bundler-2.0"
  notify: restart vx-worker service

- name: clone repo
  git: >
    repo="https://github.com/vexor/vx-worker.git"
    dest={{ vx_home }}/worker version={{ vx_version }}
    update=true force=true
  register: result
  notify: restart vx-worker service

- name: change owner
  file: >
    dest={{ vx_home }}/worker recurse=yes state=directory owner={{ vx_user }}
  when: result | changed

- name: run bundler
  sudo_user: "{{ vx_user }}"
  shell: >
    chdir={{ vx_home }}/worker
    env PATH={{ vx_home }}:$PATH {{ vx_bundle }} install --without test --path=vendor
  when: result | changed

- name: create files
  template: >
    dest={{ item.dest }} src={{ item.src }}
    owner={{ vx_user }} mode={{ item.mode }}
  with_items:
    - { dest: "{{ vx_home}}/bin/worker", src: "worker.j2", mode: "0755" }
    - { dest: "{{ vx_etc_path}}/ci", src: "env.j2", mode: "0640" }
    - { dest: "/etc/init/{{ vx_service }}.conf", src: "upstart.j2", mode: "0755" }
  notify: restart vx-worker service

- name: start vx-worker service
  service: name={{ vx_service }} state=started enabled=yes

