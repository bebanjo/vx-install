- name: create docker group
  group: name=docker system=yes

- name: create user
  user: >
    name={{ vx_user }} comment="Vexor Worker" groups=docker
    createhome=false system=true home={{ vx_home }}/worker

- name: install required packages
  apt: pkg={{ item }}
  with_items:
    - "vx-embeded-ruby-2.0"
    - "vx-embeded-bundler-2.0"
  notify: restart service

- name: create working directories
  file: dest={{ item }} state=directory owner={{ vx_user }}
  with_items:
    - "{{ vx_etc_path }}"
    - "{{ vx_home }}/worker"
    - "{{ vx_home }}/worker/releases"

- name: clone repo
  sudo_user: "{{ vx_user }}"
  git: >
    repo="https://github.com/vexor/vx-worker.git"
    dest={{ vx_home }}/worker/scm version={{ vx_version }}
    update=true force=true bare=true
  register: clone_result

- name: create files
  template: >
    dest={{ item.dest }} src={{ item.src }}
    owner={{ vx_user }} mode={{ item.mode }}
  with_items:
    - { dest: "{{ vx_home}}/bin/worker", src: "worker.j2", mode: "0755" }
    - { dest: "{{ vx_etc_path}}/ci", src: "env.j2", mode: "0640" }
    - { dest: "/etc/init/{{ vx_service }}.conf", src: "upstart.j2", mode: "0755" }
    - { dest: "{{ vx_home }}/worker/deploy.rb", src: "deploy.rb", mode: "0644" }
  register: create_result
  notify: restart service

- name: generate deploy script
  shell: >
    {{ vx_mina }} -S -f {{ vx_home }}/worker/deploy.rb deploy | grep -v 'Elapsed' > {{ vx_home }}/worker/up
  sudo_user: "{{ vx_user }}"
  when: clone_result | changed or create_result | changed
  register: script_result

- name: run deploy script
  shell: >
    bash {{ vx_home }}/worker/up > {{ vx_home }}/worker/up.log
  sudo_user: "{{ vx_user }}"
  when: script_result | changed

- name: ensure service enabled and running
  service: name={{ vx_service }} state=started enabled=yes

