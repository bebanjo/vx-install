- name: install required packages
  apt: pkg={{ item }}
  with_items:
    - curl
    - git-core

- name: download and unpack archive
  shell: >
    curl -s {{ elasticsearch_download_url }} | tar -zxf -
    chdir=/opt
    creates=/opt/elasticsearch-{{ elasticsearch_version }}/bin/elasticsearch

- name: create elasticseaarch user
  user: >
    name=elasticsearch comment="elasticsearch daemon"
    createhome=false system=true home=/opt/elasticsearch-{{ elasticsearch_version }}

- name: create directories
  file: dest={{ item }} state=directory owner=elasticsearch
  with_items:
    - /opt/elasticsearch-{{ elasticsearch_version }}/logs
    - /opt/elasticsearch-{{ elasticsearch_version }}/data

- name: setup elasticsearch.conf
  lineinfile: >
    dest=/opt/elasticsearch-{{ elasticsearch_version }}/config/elasticsearch.yml
    regexp="{{ item.regexp }}"
    line="{{ item.line }}"
    state=present
  with_items:
    - { regexp: "network.host:", line: "network.host: {{ elasticsearch_network_host }}" }
    - { regexp: "discovery.zen.ping.multicast.enabled:", line: "discovery.zen.ping.multicast.enabled: {{ elasticsearch_multicast_discovery_enabled }}" }
  notify: restart elasticsearch service

- name: create upstart job
  template: >
    dest=/etc/init/elasticsearch.conf src=upstart.j2
  notify: restart elasticsearch service

- name: ensure service up and running
  service: name=elasticsearch enabled=yes state=started

